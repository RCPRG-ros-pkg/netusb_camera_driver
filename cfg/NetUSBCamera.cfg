#! /usr/bin/env python

PACKAGE='netusb_camera_driver'

from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

trigger_enum = gen.enum( [ gen.const("StreamingMode", str_t, "streaming", "Run at maximum frame rate"),
                        gen.const("SoftwareMode",  str_t, "software",  "Software trigger"),
                        gen.const("HardwareMode",  str_t, "hardware",  "Hardware (external) trigger") ],
                      "Enum to set the trigger mode")

color_enum = gen.enum( [ gen.const("rgb24", str_t, "rgb24", ""),
                         gen.const("raw8",  str_t, "raw8", "") ],
                       "Color mode")

mode_enum = gen.enum( [ gen.const("QVGA",       int_t, 0, "320x240"),
                        gen.const("VGA",        int_t, 1, "640x480"),
                        gen.const("WVGA",       int_t, 2, "752x480"),
                        gen.const("SVGA",       int_t, 3, "800x600"),
                        gen.const("XGA",        int_t, 4, "1024x768"),
                        gen.const("SXGA",       int_t, 5, "1280x1024"),
                        gen.const("UXGA",       int_t, 6, "1600x1200"),
                        gen.const("QXGA",       int_t, 7, "2048x1536"),
                        gen.const("QSXGA",      int_t, 8, "2592x1944"),
                        gen.const("WQUXGA",     int_t, 9, "3840x2748")],
                      "An enum to set video mode")

#       Name                    Type      Reconfiguration level             Description         Default   Min   Max
gen.add("trigger_mode",         str_t,    SensorLevels.RECONFIGURE_RUNNING, "Camera trigger mode", "streaming", edit_method = trigger_enum)
gen.add("color_mode",           str_t,    SensorLevels.RECONFIGURE_STOP,    "Color mode",       "raw8",         edit_method = color_enum)    
gen.add("video_mode",           int_t,    SensorLevels.RECONFIGURE_STOP,    "Video mode",       5,              edit_method = mode_enum)    
gen.add("pll",                  int_t,    SensorLevels.RECONFIGURE_RUNNING, "Pixelclock value", 24,       6,    50)
gen.add("frame_id",             str_t,    SensorLevels.RECONFIGURE_RUNNING, "The optical camera TF frame set in message headers.", "")
#gen.add("trig_timestamp_topic", str_t,    SensorLevels.RECONFIGURE_STOP,    "Sets the topic from which an externally trigged camera receives its trigger timestamps.", "trigger")

exit(gen.generate(PACKAGE, "netusb_camera_driver", "NetUSBCamera"))

